{"version":3,"sources":["components/SearchCard.js","components/ResultsCard.js","components/NominationsCard.js","App.js","index.js"],"names":["SearchCard","Card","Section","Autocomplete","TextField","onChange","this","props","updateSearchTerm","label","value","searchTerm","prefix","Icon","source","SearchMinor","color","placeholder","subdued","TextContainer","nominationsAmountGoal","TextStyle","variation","React","Component","ResultsCard","title","getSearchResultTitle","sectioned","isLoading","Spinner","accessibilityLabel","size","List","type","movies","map","movie","i","Item","key","Stack","spacing","alignment","Button","onClick","selectMovie","disabled","checkIfIsSelected","isNominationsComplete","NominationsCard","getNominationsTitle","nominations","length","Banner","status","unselectMovie","App","apiUrl","apiKey","state","term","setState","search","updateLocalNominationsStorage","index","nominationsCopy","splice","m","includes","axios","get","then","response","data","catch","console","log","localStorage","setItem","JSON","stringify","storedNominations","parse","getItem","undefined","Page","Layout","oneHalf","FooterHelp","Link","url","WrappedApp","AppProvider","i18n","enTranslations","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38053f99.chunk.js","sourcesContent":["import React from 'react';\nimport { Autocomplete, Icon, TextContainer, Card, TextStyle } from '@shopify/polaris';\nimport { SearchMinor } from '@shopify/polaris-icons';\n\nclass SearchCard extends React.Component {\n  render() {\n    return (\n      <Card >\n        <Card.Section>\n          <Autocomplete.TextField\n            onChange={this.props.updateSearchTerm}\n            label=\"Movie title\"\n            value={this.props.searchTerm}\n            prefix={<Icon source={SearchMinor} color=\"inkLighter\" />}\n            placeholder=\"Search\"\n          />\n        </Card.Section>\n        <Card.Section subdued>\n          <TextContainer>\n            Search for your favorite movies and nominate {this.props.nominationsAmountGoal} for <TextStyle variation=\"strong\">The Shoppies</TextStyle>.\n                </TextContainer>\n        </Card.Section>\n      </Card>\n    );\n  }\n}\n\nexport default SearchCard;","import React from 'react';\nimport { Button, Stack, TextContainer, List, Card, Spinner } from '@shopify/polaris';\n\nclass ResultsCard extends React.Component {\n\n  getSearchResultTitle() {\n    return `Results for \"${this.props.searchTerm}\"`\n  }\n\n  render() {\n    return (\n      <Card title={this.getSearchResultTitle()} sectioned>\n        {\n          this.props.isLoading &&\n          <Spinner accessibilityLabel=\"Spinner example\" size=\"large\" color=\"teal\" />\n        }\n        <List type=\"bullet\">\n          {this.props.movies.map((movie, i) => (\n            <List.Item key={i}>\n              <Stack spacing=\"extraTight\" alignment=\"center\">\n                <TextContainer>\n                  {movie[\"Title\"]} ({movie[\"Year\"]})\n                    </TextContainer>\n                <Button size=\"slim\" onClick={() => this.props.selectMovie(movie)} disabled={this.props.checkIfIsSelected(movie) || this.props.isNominationsComplete()}>Nominate</Button>\n              </Stack>\n            </List.Item>\n          ))}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default ResultsCard;","import React from 'react';\nimport { Button, Banner, Stack, TextContainer, List, Card } from '@shopify/polaris';\n\nclass NominationsCard extends React.Component {\n\n  getNominationsTitle = () => {\n    return `Nominations (${this.props.nominations.length}/${this.props.nominationsAmountGoal})`\n  }\n\n  render() {\n    return (\n      <Card title={this.getNominationsTitle()} sectioned>\n      <TextContainer>\n        {\n          this.props.isNominationsComplete() &&\n          <Banner status=\"success\">\n            <p>You've completed your {this.props.nominationsAmountGoal} nominations</p>\n          </Banner>\n        }\n        <List type=\"bullet\">\n          {this.props.nominations.map((movie, i) => (\n            <List.Item key={i}>\n              <Stack spacing=\"extraTight\" alignment=\"center\">\n                <TextContainer>\n                  {movie[\"Title\"]} ({movie[\"Year\"]})\n              </TextContainer>\n                <Button size=\"slim\" onClick={() => this.props.unselectMovie(i)}>Remove</Button>\n              </Stack>\n            </List.Item>\n          ))}\n        </List>\n      </TextContainer>\n    </Card>\n    );\n  }\n}\n\nexport default NominationsCard;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Page, Layout, FooterHelp, Link } from '@shopify/polaris';\nimport SearchCard from './components/SearchCard';\nimport ResultsCard from './components/ResultsCard';\nimport NominationsCard from './components/NominationsCard';\n\nclass App extends Component {\n\n  apiUrl = 'https://www.omdbapi.com/?type=movie';\n  apiKey = '449289f';\n  nominationsAmountGoal = 5;\n\n  state = {\n    searchTerm: '',\n    isLoading: false,\n    movies: [],\n    nominations: [],\n  }\n\n  search() {\n    axios.get(`${this.apiUrl}&s=${this.state.searchTerm}&apikey=${this.apiKey}`)\n      .then((response) => {\n        if (response.data['Response'] === 'True') {\n          this.setState({ movies: response.data['Search'], isLoading: false });\n        } else {\n          this.setState({ movies: [], isLoading: false });\n        }\n      })\n      .catch(console.log)\n  }\n\n  updateSearchTerm = term => {\n    this.setState({ searchTerm: term, isLoading: true }, this.search);\n  }\n\n  selectMovie = movie => {\n    this.setState({ nominations: [...this.state.nominations, movie] }, this.updateLocalNominationsStorage)\n  }\n\n  unselectMovie = index => {\n    var nominationsCopy = this.state.nominations;\n    nominationsCopy.splice(index, 1);\n    this.setState({ nominations: nominationsCopy }, this.updateLocalNominationsStorage)\n  }\n\n  checkIfIsSelected = movie => {\n    return this.state.nominations.map((m) => m[\"imdbID\"]).includes(movie[\"imdbID\"]);\n  }\n\n  isNominationsComplete = () => {\n    return this.state.nominations.length === this.nominationsAmountGoal;\n  }\n\n  updateLocalNominationsStorage() {\n    localStorage.setItem('nominations', JSON.stringify(this.state.nominations));\n  }\n\n  componentDidMount() {\n    var storedNominations = JSON.parse(localStorage.getItem('nominations'));\n    console.log(storedNominations);\n    if (storedNominations !== null && storedNominations !== undefined) {\n      this.setState({\n        nominations: storedNominations\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Page\n        title=\"The Shoppies\">\n        <Layout>\n          <Layout.Section>\n            <SearchCard\n              nominationsAmountGoal={this.nominationsAmountGoal}\n              searchTerm={this.state.searchTerm}\n              updateSearchTerm={this.updateSearchTerm}>\n            </SearchCard>\n          </Layout.Section>\n          <Layout.Section oneHalf>\n            <ResultsCard\n              searchTerm={this.state.searchTerm}\n              isLoading={this.state.isLoading}\n              movies={this.state.movies}\n              selectMovie={this.selectMovie}\n              checkIfIsSelected={this.checkIfIsSelected}\n              isNominationsComplete={this.isNominationsComplete}>\n            </ResultsCard>\n          </Layout.Section>\n          <Layout.Section oneHalf>\n            <NominationsCard\n              nominations={this.state.nominations}\n              nominationsAmountGoal={this.nominationsAmountGoal}\n              unselectMovie={this.unselectMovie}\n              isNominationsComplete={this.isNominationsComplete}\n            >\n            </NominationsCard>\n          </Layout.Section>\n        </Layout>\n        <FooterHelp>\n          Find the code and my notes in my <Link url=\"https://github.com/alexanderzenner/shoppies\">\n            GitHub repository\n          </Link>\n        </FooterHelp>\n      </Page>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@shopify/polaris/dist/styles.css';\nimport {AppProvider} from '@shopify/polaris';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport App from './App';\n\nfunction WrappedApp() {\n  return (\n    <AppProvider i18n={enTranslations}>\n      <App />\n    </AppProvider>\n  );\n}\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'));\n"],"sourceRoot":""}